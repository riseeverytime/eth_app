{
  "callToAction": "Read On-Chain Balance",
  "contractsImportLine": "import { MAINNET_ID, addresses, abis } from \"@aave-app/contracts\";",
  "graphqlQuery": [
    "const GET_LENDING_POOL_CONFIGURATION_HISTORY_ITEMS = gql`",
    "  {",
    "    lendingPoolConfigurationHistoryItems(first: 5) {",
    "      id",
    "      provider {",
    "        id",
    "      }",
    "      lendingPool",
    "      lendingPoolCore",
    "    }",
    "  }",
    "`;"
  ],
  "graphqlQueryName": "GET_LENDING_POOL_CONFIGURATION_HISTORY_ITEMS",
  "learnItems": [
    {
      "label": "Core Docs",
      "url": "https://docs.aave.com/developers/"
    },
    {
      "label": "Community Chat",
      "url": "https://t.me/Aavesome/"
    },
    {
      "label": "Twitter",
      "url": "https://twitter.com/aaveaave/"
    }
  ],
  "mounted": {
    "readData": [
      "if (!loading && !stale && data && data.lendingPoolConfigurationHistoryItems) {",
      "  console.log({ lendingPoolConfigurationHistoryItems: data.lendingPoolConfigurationHistoryItems });",
      "}"
    ]
  },
  "readOnChainData": [
    "const aDAIContract = new Contract(addresses[MAINNET_ID].tokens.aDAI, abis.aToken, defaultProvider);",
    "// A pre-defined address that owns some aDAI tokens",
    "const aDAIBalance = await aDAIContract.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");",
    "console.log({ aDAIBalance: aDAIBalance.toString() });"
  ],
  "whatToLearn": "Aave"
}
